import os
from dotenv import load_dotenv
from crewai import Crew, Agent, Task, Process
from crewai.tools import tool
import feedparser
import telegram
import asyncio
from telegram import Bot

load_dotenv()

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
RSS_URL = "http://feeds.bbci.co.uk/news/rss.xml"
# RSS_URL = "http://feeds.reuters.com/reuters/topNews"
# RSS_URL = "https://lenta.ru/rss/news"
# RSS_URL = "https://rssexport.rbc.ru/rbcnews/news/30/full.rss"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not OPENAI_API_KEY:
    raise ValueError("OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")
if not TELEGRAM_TOKEN:
    raise ValueError("TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")
if not TELEGRAM_CHAT_ID:
    raise ValueError("TELEGRAM_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")

# --- –ê–≥–µ–Ω—Ç 1: RSS-–ø–∞—Ä—Å–µ—Ä (TOOL) ---
rss_agent = Agent(
    role="RSS-–ø–∞—Ä—Å–µ—Ä",
    goal="–°–æ–±—Ä–∞—Ç—å —Ç–æ–ø-3 –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ RSS-–ª–µ–Ω—Ç—ã.",
    backstory="–°—É–ø–µ—Ä–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–æ—Ç-–ø–∞—Ä—Å–µ—Ä.",
    allow_delegation=False,
    model="gpt-4.1-nano-2025-04-14"
)

@tool("get_top_news")
def get_top_news(_=None):
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ø-3 –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ RSS-–ª–µ–Ω—Ç—ã"""
    feed = feedparser.parse(RSS_URL)
    news = []
    for entry in feed.entries[:3]:
        news.append({
            "title": entry.get("title", ""),
            "summary": entry.get("summary", entry.get("description", "")),
            "link": entry.get("link", "")
        })
    return news

# --- –ê–≥–µ–Ω—Ç 2: AI-—Ä–µ—Ñ–µ—Ä–µ–Ω—Ç ---
summarizer_agent = Agent(
    role="AI-—Ä–µ—Ñ–µ—Ä–µ–Ω—Ç",
    goal="–ö—Ä–∞—Ç–∫–æ –∏ –ø–æ-–¥–µ–ª–æ–≤–æ–º—É —Ä–µ–∑—é–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—É—é –Ω–æ–≤–æ—Å—Ç—å.",
    backstory="–í—Å–µ–≥–¥–∞ –≤—ã–¥–µ–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –∏ –ø–∏—à–µ—Ç —è—Å–Ω–æ –∏ –ª–∞–∫–æ–Ω–∏—á–Ω–æ.",
    allow_delegation=False,
    model="gpt-4.1-nano-2025-04-14"
)

# --- –ê–≥–µ–Ω—Ç 3: AI-—Ä–µ–¥–∞–∫—Ç–æ—Ä-–¥–∞–π–¥–∂–µ—Å—Ç–æ–ª–æ–≥ ---
report_agent = Agent(
    role="AI-—Ä–µ–¥–∞–∫—Ç–æ—Ä",
    goal="–û–±—ä–µ–¥–∏–Ω–∏—Ç—å summary –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∏–Ω–∏-–æ—Ç—á—ë—Ç.",
    backstory="–°–æ–∑–¥–∞—ë—Ç –º–∏–Ω–∏-–¥–∞–π–¥–∂–µ—Å—Ç—ã –¥–ª—è –∑–∞–Ω—è—Ç—ã—Ö —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π.",
    allow_delegation=False,
    model="gpt-4.1-nano-2025-04-14"
)

# --- Step 1. Task: –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ø-3 –Ω–æ–≤–æ—Å—Ç–∏ (tool+LLM magic) ---
rss_task = Task(
    description=(
        f"–ò—Å–ø–æ–ª—å–∑—É–π –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç (tool), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑ 3 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —Å RSS-–ª–µ–Ω—Ç—ã {RSS_URL}. "
        "–í–µ—Ä–Ω–∏ –∏—Ö –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π (–∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ–ø–∏—Å–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∞)."
    ),
    agent=rss_agent,
    expected_output="–°–ø–∏—Å–æ–∫ –∏–∑ —Ç—Ä—ë—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, –∫–∞–∂–¥–∞—è ‚Äî —Å–ª–æ–≤–∞—Ä—å —Å title, summary, link.",
    tools=[get_top_news],  # –ü–µ—Ä–µ–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é, –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é @tool
    input=None
)

# --- Step 2. Task: –†–µ—Ñ–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—É—é –Ω–æ–≤–æ—Å—Ç—å ---
summarizer_task = Task(
    description=(
        "–î–ª—è –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞ –Ω–∞–ø–∏—à–∏ –∫—Ä–∞—Ç–∫–æ–µ –¥–µ–ª–æ–≤–æ–µ —Ä–µ–∑—é–º–µ (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. "
        "–ü–∏—à–∏ –ø—Ä–æ—Å—Ç—ã–º –∏ —è—Å–Ω—ã–º —è–∑—ã–∫–æ–º –¥–ª—è –¥–µ–ª–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. "
        "–í–µ—Ä–Ω–∏ —Å–ø–∏—Å–æ–∫ –∏–∑ —Ç—Ä—ë—Ö summary –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –Ω–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ."
    ),
    agent=summarizer_agent,
    expected_output="–°–ø–∏—Å–æ–∫ –∏–∑ —Ç—Ä—ë—Ö –∫—Ä–∞—Ç–∫–∏—Ö summary –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.",
    input=lambda: rss_task.output
)

# --- Step 3. Task: –°–æ–±—Ä–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç ---
report_task = Task(
    description=(
        "–û–±—ä–µ–¥–∏–Ω–∏ –≤—Å–µ summary –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –º–∏–Ω–∏-–æ—Ç—á—ë—Ç –¥–ª—è Telegram –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ: "
        "–¥–æ–±–∞–≤—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ 'üì∞ –ú–∏–Ω–∏-–æ—Ç—á—ë—Ç –ø–æ –ø–æ—Å–ª–µ–¥–Ω–∏–º –Ω–æ–≤–æ—Å—Ç—è–º:', –ø–æ—Å–ª–µ –Ω–µ–≥–æ —Å–¥–µ–ª–∞–π –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫. "
        "–í–µ—Å—å —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
    ),
    agent=report_agent,
    expected_output="–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –º–∏–Ω–∏-–æ—Ç—á—ë—Ç–∞ –¥–ª—è Telegram –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.",
    input=lambda: summarizer_task.output
)

# --- Crew pipeline ---
crew = Crew(
    agents=[rss_agent, summarizer_agent, report_agent],
    tasks=[rss_task, summarizer_task, report_task],
    process=Process.sequential,
    openai_api_key=OPENAI_API_KEY
)


async def send_telegram_message(token, chat_id, message):
    print(">>> –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç –≤ Telegram —á–µ—Ä–µ–∑ PTB 20+...")
    bot = Bot(token=token)
    chunks = [message[i:i+4000] for i in range(0, len(message), 4000)]
    for chunk in chunks:
        await bot.send_message(chat_id=chat_id, text=chunk)
    print(">>> –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")



if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫–∞–µ–º CrewAI-–º–∞–≥–∏—á–µ—Å–∫–∏–π LLM-–ø–∞–π–ø–ª–∞–π–Ω —Å –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º!")
    results = crew.kickoff()
    if not isinstance(results, str):
        results = str(results)
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞:\n", results)
    asyncio.run(send_telegram_message(TELEGRAM_TOKEN, TELEGRAM_CHAT_ID, results))
    print("–û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")



